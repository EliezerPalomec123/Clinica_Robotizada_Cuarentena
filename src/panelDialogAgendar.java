import java.awt.Font;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class panelDialogAgendar extends javax.swing.JPanel {
    boolean solicitudEmpleado;
    DefaultTableModel modelo;//Modelo de la tabla
    DefaultTableModel modeloTablaAgregarAPractica;//Modelo de la tabla
    String NumeroDeTrabajador[];
    String idPractica[];
    String NombreLaboratorio="";
    javax.swing.JDialog ventana;
    public panelDialogAgendar(javax.swing.JDialog dialog, String nombreLaboratorio) {
        initComponents();
        this.setSize(1100, 735);//Tama√±o de el panel
        tabla.getTableHeader().setPreferredSize(new java.awt.Dimension(0,30));
        tabla.getTableHeader().setFont(new Font("Dialog", Font.PLAIN, 16));//Cambiamo la fuente y tipo de letra de los titulo de la tabla
        tablaAgregarAPractica.getTableHeader().setPreferredSize(new java.awt.Dimension(0,30));
        tablaAgregarAPractica.getTableHeader().setFont(new Font("Dialog", Font.PLAIN, 16));//Cambiamo la fuente y tipo de letra de los titulo de la tabla
        modelo = (DefaultTableModel) tabla.getModel();//Asignamos al modelo creado el modelo de la tabla ya existente
        modeloTablaAgregarAPractica = (DefaultTableModel) tablaAgregarAPractica.getModel();//Asignamos al modelo creado el modelo de la tabla ya existente
        labelTitulo.setText(labelTitulo.getText()+nombreLaboratorio);//Asignamos un titulo al panel
        NombreLaboratorio=nombreLaboratorio;//Guardamos el nombre del laboratorio que se esta solicitando
        ventana=dialog;
        new TextPrompt(" Busqueda por Matricula o Nombre del Alumno",txtBusqueda);
        boxNombreProfesor.setEnabled(false);
        dialog.add(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        txtBusqueda = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        labelTitulo = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        buttonVaciarTabla = new javax.swing.JPanel();
        lableVt = new javax.swing.JLabel();
        buttonEliminarAlumno = new javax.swing.JPanel();
        labelE = new javax.swing.JLabel();
        buttonAgregarPractica = new javax.swing.JPanel();
        labelAp = new javax.swing.JLabel();
        buttonAgregarTodos = new javax.swing.JPanel();
        labelAgt = new javax.swing.JLabel();
        buttonAgregarAlumno = new javax.swing.JPanel();
        labelEd = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaAgregarAPractica = new javax.swing.JTable();
        boxHoraEntrada = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        boxHoraSalida = new javax.swing.JComboBox<>();
        boxGrupos = new javax.swing.JComboBox<>();
        boxPracticasDisponibles = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        boxHoraSustituida = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        boxNombreProfesor = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        boxMes = new javax.swing.JComboBox<>();
        boxDia = new javax.swing.JComboBox<>();
        boxAge = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jSeparator1.setToolTipText("");
        jSeparator1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(43, 113, 205), 5));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, 450, 3));

        txtBusqueda.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        txtBusqueda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBusqueda.setBorder(null);
        txtBusqueda.setOpaque(false);
        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyReleased(evt);
            }
        });
        add(txtBusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, 410, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/busqueda.png"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 180, 50, 40));

        jPanel1.setBackground(new java.awt.Color(43, 113, 205));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelTitulo.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        labelTitulo.setForeground(new java.awt.Color(255, 255, 255));
        labelTitulo.setText("Agendar_ ");
        jPanel1.add(labelTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, 560, 60));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 60));

        tabla.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Matricula", "Nombre", "Apellido Paterno", "Apellido Materno", "Grupo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla.setRowHeight(35);
        tabla.setSelectionBackground(new java.awt.Color(43, 113, 205));
        tabla.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(tabla);
        if (tabla.getColumnModel().getColumnCount() > 0) {
            tabla.getColumnModel().getColumn(0).setResizable(false);
            tabla.getColumnModel().getColumn(0).setPreferredWidth(60);
            tabla.getColumnModel().getColumn(1).setResizable(false);
            tabla.getColumnModel().getColumn(2).setResizable(false);
            tabla.getColumnModel().getColumn(3).setResizable(false);
            tabla.getColumnModel().getColumn(4).setResizable(false);
            tabla.getColumnModel().getColumn(4).setPreferredWidth(20);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 290, 540, 390));

        buttonVaciarTabla.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonVaciarTabla.setForeground(new java.awt.Color(255, 255, 255));
        buttonVaciarTabla.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonVaciarTabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonVaciarTablaMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonVaciarTablaMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonVaciarTablaMouseEntered(evt);
            }
        });
        buttonVaciarTabla.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lableVt.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lableVt.setForeground(new java.awt.Color(204, 51, 0));
        lableVt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lableVt.setText("Vaciar Tabla");
        buttonVaciarTabla.add(lableVt, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 150, 40));

        add(buttonVaciarTabla, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 240, 150, 40));

        buttonEliminarAlumno.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonEliminarAlumno.setForeground(new java.awt.Color(255, 255, 255));
        buttonEliminarAlumno.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonEliminarAlumno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonEliminarAlumnoMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonEliminarAlumnoMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonEliminarAlumnoMouseEntered(evt);
            }
        });
        buttonEliminarAlumno.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelE.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        labelE.setForeground(new java.awt.Color(204, 51, 0));
        labelE.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelE.setText("Eliminar Alumno Practica");
        buttonEliminarAlumno.add(labelE, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 280, 40));

        add(buttonEliminarAlumno, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 240, 280, 40));

        buttonAgregarPractica.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        buttonAgregarPractica.setForeground(new java.awt.Color(255, 255, 255));
        buttonAgregarPractica.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonAgregarPractica.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonAgregarPracticaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonAgregarPracticaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonAgregarPracticaMouseExited(evt);
            }
        });
        buttonAgregarPractica.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelAp.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        labelAp.setForeground(new java.awt.Color(0, 153, 51));
        labelAp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelAp.setText("Agregar Practica");
        buttonAgregarPractica.add(labelAp, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 15, 190, 30));

        add(buttonAgregarPractica, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 100, 190, 60));

        buttonAgregarTodos.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonAgregarTodos.setForeground(new java.awt.Color(255, 255, 255));
        buttonAgregarTodos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonAgregarTodos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonAgregarTodosMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonAgregarTodosMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonAgregarTodosMouseEntered(evt);
            }
        });
        buttonAgregarTodos.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelAgt.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        labelAgt.setForeground(new java.awt.Color(0, 153, 51));
        labelAgt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelAgt.setText("Agregar Todos");
        buttonAgregarTodos.add(labelAgt, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 5, 160, 30));

        add(buttonAgregarTodos, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 240, 160, 40));

        buttonAgregarAlumno.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonAgregarAlumno.setForeground(new java.awt.Color(255, 255, 255));
        buttonAgregarAlumno.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonAgregarAlumno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonAgregarAlumnoMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonAgregarAlumnoMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonAgregarAlumnoMouseEntered(evt);
            }
        });
        buttonAgregarAlumno.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelEd.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        labelEd.setForeground(new java.awt.Color(0, 153, 51));
        labelEd.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelEd.setText("Agregar Alumno Practica");
        buttonAgregarAlumno.add(labelEd, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 5, 280, 30));

        add(buttonAgregarAlumno, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 280, 40));

        tablaAgregarAPractica.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        tablaAgregarAPractica.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Matricula", "Nombre", "Apellido Paterno", "Apellido Materno", "Grupo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaAgregarAPractica.setRowHeight(35);
        tablaAgregarAPractica.setSelectionBackground(new java.awt.Color(43, 113, 205));
        tablaAgregarAPractica.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(tablaAgregarAPractica);
        if (tablaAgregarAPractica.getColumnModel().getColumnCount() > 0) {
            tablaAgregarAPractica.getColumnModel().getColumn(0).setResizable(false);
            tablaAgregarAPractica.getColumnModel().getColumn(0).setPreferredWidth(60);
            tablaAgregarAPractica.getColumnModel().getColumn(1).setResizable(false);
            tablaAgregarAPractica.getColumnModel().getColumn(2).setResizable(false);
            tablaAgregarAPractica.getColumnModel().getColumn(3).setResizable(false);
            tablaAgregarAPractica.getColumnModel().getColumn(4).setResizable(false);
            tablaAgregarAPractica.getColumnModel().getColumn(4).setPreferredWidth(20);
        }

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 290, 540, 390));

        boxHoraEntrada.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        boxHoraEntrada.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "08:00", "09:00", "10:00", "11:00", "12:00", "13:00", "16:00", "17:00", "18:00", "19:00" }));
        boxHoraEntrada.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        add(boxHoraEntrada, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 90, 110, 40));

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(43, 113, 205));
        jLabel3.setText("Hora Entrada:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 60, 150, 30));

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(43, 113, 205));
        jLabel4.setText("Hora Salida:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 130, 150, 30));

        boxHoraSalida.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        boxHoraSalida.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "09:00", "10:00", "11:00", "12:00", "13:00", "14:00", "16:00", "17:00", "18:00", "19:00", "20:00" }));
        boxHoraSalida.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        add(boxHoraSalida, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 160, 110, 40));

        boxGrupos.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        boxGrupos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                boxGruposItemStateChanged(evt);
            }
        });
        add(boxGrupos, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 140, 130, 40));

        boxPracticasDisponibles.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        boxPracticasDisponibles.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        add(boxPracticasDisponibles, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 90, 230, 40));

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(43, 113, 205));
        jLabel2.setText("Practicas Disponibles:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 60, 210, 30));

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(43, 113, 205));
        jLabel5.setText("Hora Sustituida:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 160, 30));

        boxHoraSustituida.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        boxHoraSustituida.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ninguno", "Hora de Clases", "Hora de Biblioteca", "Hora de Club", "Hora de Sala de Computo" }));
        boxHoraSustituida.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        boxHoraSustituida.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                boxHoraSustituidaItemStateChanged(evt);
            }
        });
        add(boxHoraSustituida, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 190, 40));

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(43, 113, 205));
        jLabel6.setText("Nombre profesor solicitante:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 60, 260, 30));

        boxNombreProfesor.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        boxNombreProfesor.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        add(boxNombreProfesor, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 90, 200, 40));

        jLabel7.setBackground(new java.awt.Color(0, 0, 0));
        jLabel7.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel7.setText("Alumnos en el grupo:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, 250, 40));

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel8.setText(" Alumnos qu√© participarar√°n en la practica:");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 205, 500, 40));

        jLabel9.setBackground(new java.awt.Color(0, 0, 0));
        jLabel9.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(43, 113, 205));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Fecha reservacion");
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 130, 210, 40));

        boxMes.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        boxMes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mes", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        boxMes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        add(boxMes, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 170, 70, 40));

        boxDia.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        boxDia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "D√≠a", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        boxDia.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        add(boxDia, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 170, 70, 40));

        boxAge.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        boxAge.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A√±o", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030" }));
        boxAge.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        add(boxAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 170, 80, 40));

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("/");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 170, 20, 50));

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("/");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 170, 20, 50));
    }// </editor-fold>//GEN-END:initComponents

    private void txtBusquedaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyReleased
        buscarAlumnoEnTabla(txtBusqueda.getText());
    }//GEN-LAST:event_txtBusquedaKeyReleased

    private void buttonEliminarAlumnoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonEliminarAlumnoMouseClicked
        if (!solicitudEmpleado) {
            if (modeloTablaAgregarAPractica.getRowCount()==0)
                JOptionPane.showMessageDialog(this, "La tabla se encuentra vacia");
            else if(tablaAgregarAPractica.getSelectedRow()==-1)
                JOptionPane.showMessageDialog(this, "Seleccione un registro");
            else {
                modeloTablaAgregarAPractica.removeRow(tablaAgregarAPractica.getSelectedRow());
                tablaAgregarAPractica.changeSelection(0, 1, false, false);
            }
        }
        else
            JOptionPane.showMessageDialog(this, "                              No puedes eliminar alumnos de esta practica. \nTodos los alumnos del grupo: "+boxGrupos.getSelectedItem()+" deben asistir a esta practica ya que es su hora de clases");
        
    }//GEN-LAST:event_buttonEliminarAlumnoMouseClicked

    private void buttonEliminarAlumnoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonEliminarAlumnoMouseEntered
        buttonEliminarAlumno.setBackground(new java.awt.Color(204, 51, 0));
        labelE.setForeground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_buttonEliminarAlumnoMouseEntered

    private void buttonEliminarAlumnoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonEliminarAlumnoMouseExited
        buttonEliminarAlumno.setBackground(new java.awt.Color(255,255,255));
        labelE.setForeground(new java.awt.Color(204, 51, 0));
    }//GEN-LAST:event_buttonEliminarAlumnoMouseExited

    private void buttonAgregarAlumnoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonAgregarAlumnoMouseClicked
         if (modelo.getRowCount()==0) {
            JOptionPane.showMessageDialog(null,"No tienes ningun registro en el sistema");
        }
        else if(tabla.getSelectedRow()!=-1){
            if(AgregarTablaAgregarPractica((String)modelo.getValueAt(tabla.getSelectedRow(),0))){
                modeloTablaAgregarAPractica.addRow(new Object[] {(String)modelo.getValueAt(tabla.getSelectedRow(),0),(String)modelo.getValueAt(tabla.getSelectedRow(),1),(String)modelo.getValueAt(tabla.getSelectedRow(),2),(String)modelo.getValueAt(tabla.getSelectedRow(),3),(String)modelo.getValueAt(tabla.getSelectedRow(),4)});//agregamos los datos a la tabla
                modeloTablaAgregarAPractica.moveRow(modeloTablaAgregarAPractica.getRowCount() - 1, modeloTablaAgregarAPractica.getRowCount() - 1, 0);//Movemos la fila agregada a la primera posicion
                tablaAgregarAPractica.changeSelection(0, 1, false, false);
            }
            else{
                JOptionPane.showMessageDialog(null,"El Alumno ya se agrego a la practica");
            }
        }
        else
            JOptionPane.showMessageDialog(this, "Seleccione un registro");
    }//GEN-LAST:event_buttonAgregarAlumnoMouseClicked

    private void buttonAgregarAlumnoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonAgregarAlumnoMouseEntered
        buttonAgregarAlumno.setBackground(new java.awt.Color(0, 153, 51));
        labelEd.setForeground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_buttonAgregarAlumnoMouseEntered

    private void buttonAgregarAlumnoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonAgregarAlumnoMouseExited
        buttonAgregarAlumno.setBackground(new java.awt.Color(255,255,255));
        labelEd.setForeground(new java.awt.Color(0, 153, 51));
    }//GEN-LAST:event_buttonAgregarAlumnoMouseExited

    private void buttonAgregarPracticaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonAgregarPracticaMouseClicked
        if (tablaAgregarAPractica.getRowCount()!=0){
            if (boxHoraSustituida.getSelectedIndex()==0 || boxPracticasDisponibles.getSelectedIndex()==0 || boxAge.getSelectedIndex()==0 || boxMes.getSelectedIndex()==0 || boxDia.getSelectedIndex()==0) 
                JOptionPane.showMessageDialog(null,"Rellene todos los campos");
            else{
                boolean Agendado=true;
                if (solicitudEmpleado) {
                    if (boxNombreProfesor.getSelectedIndex()!=0) {
                        if(JOptionPane.showConfirmDialog(this, "¬øEsta seguro que desea registrar la practica ?\nidEncargado: 0005\nidprofesorSolicitante: "+NumeroDeTrabajador[boxNombreProfesor.getSelectedIndex()-1]+"\nidPractica: "+idPractica[boxPracticasDisponibles.getSelectedIndex()-1]+"\narea: "+NombreLaboratorio+"\nHora Sustituida: "+boxHoraSustituida.getSelectedItem()+"\nH_inicio: : "+boxHoraEntrada.getSelectedItem()+"\nH_Fin: "+boxHoraSalida.getSelectedItem()+"\nfecha: "+boxAge.getSelectedItem()+"/"+boxMes.getSelectedItem()+"/"+boxDia.getSelectedItem(), "Confirmar", JOptionPane.YES_NO_OPTION)==0){
                            if(!Splash.conexionBaseDatos.InsertDefine((String)idPractica[boxPracticasDisponibles.getSelectedIndex()-1], (String)boxGrupos.getSelectedItem(),(String)boxHoraSustituida.getSelectedItem(),(String)NumeroDeTrabajador[boxNombreProfesor.getSelectedIndex()-1] , (String)boxHoraEntrada.getSelectedItem(), (String)boxHoraSalida.getSelectedItem(),boxAge.getSelectedItem()+"/"+boxMes.getSelectedItem()+"/"+boxDia.getSelectedItem()))
                                JOptionPane.showMessageDialog(null,"No se pudo agendar la practica del solicitante: "+NumeroDeTrabajador[boxNombreProfesor.getSelectedIndex()-1]);
                            for (int i = 0;i<tablaAgregarAPractica.getRowCount() ; i++)
                                if(!Splash.conexionBaseDatos.InsertDefine((String)idPractica[boxPracticasDisponibles.getSelectedIndex()-1], (String)boxGrupos.getSelectedItem(),(String)boxHoraSustituida.getSelectedItem(),(String) modeloTablaAgregarAPractica.getValueAt(i,0), (String)boxHoraEntrada.getSelectedItem(), (String)boxHoraSalida.getSelectedItem(),(String)boxAge.getSelectedItem()+"/"+(String)boxMes.getSelectedItem()+"/"+(String)boxDia.getSelectedItem())){
                                    JOptionPane.showMessageDialog(null,"No se pudo agendar la practica del solicitante: "+modeloTablaAgregarAPractica.getValueAt(i,0));
                                    Agendado=false;
                                }
                        }
                    }
                    else
                        JOptionPane.showMessageDialog(null,"Rellene el campo nombre del profesor");
                }
                else{
                    if(JOptionPane.showConfirmDialog(this, "¬øEsta seguro que desea registrar la practica ?\nidEncargado: 0005\nidPractica: "+idPractica[boxPracticasDisponibles.getSelectedIndex()-1]+"\narea: "+NombreLaboratorio+"\nHora Sustituida: "+boxHoraSustituida.getSelectedItem()+"\nH_inicio: : "+boxHoraEntrada.getSelectedItem()+"\nH_Fin: "+boxHoraSalida.getSelectedItem()+"\nfecha: "+boxAge.getSelectedItem()+"/"+boxMes.getSelectedItem()+"/"+boxDia.getSelectedItem(), "Confirmar", JOptionPane.YES_NO_OPTION)==0){
                        for (int i = 0;i<tablaAgregarAPractica.getRowCount() ; i++)
                            if(!Splash.conexionBaseDatos.InsertDefine((String)idPractica[boxPracticasDisponibles.getSelectedIndex()-1], (String)boxGrupos.getSelectedItem(),(String)boxHoraSustituida.getSelectedItem(),(String) modeloTablaAgregarAPractica.getValueAt(i,0), (String)boxHoraEntrada.getSelectedItem(), (String)boxHoraSalida.getSelectedItem(),(String)boxAge.getSelectedItem()+"/"+(String)boxMes.getSelectedItem()+"/"+(String)boxDia.getSelectedItem())){
                                JOptionPane.showMessageDialog(null,"No se pudo agendar la practica del solicitante: "+modeloTablaAgregarAPractica.getValueAt(i,0));
                                Agendado=false;
                            }
                    }                  
                }
                if (Agendado)
                    JOptionPane.showMessageDialog(null,"Practicas agregada correctamente");
                else
                    JOptionPane.showMessageDialog(null,"Algunas Practicas no pudieron ser agregadadas");
                ventana.dispose();
            }
        }
        else
            JOptionPane.showMessageDialog(null,"La tabla \"alumnos qu√© participarar√°n en la practica\" se encuentra vacia");
    }//GEN-LAST:event_buttonAgregarPracticaMouseClicked

    private void buttonAgregarPracticaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonAgregarPracticaMouseExited
        buttonAgregarPractica.setBackground(new java.awt.Color(255,255,255));
        labelAp.setForeground(new java.awt.Color(0, 153, 51));
    }//GEN-LAST:event_buttonAgregarPracticaMouseExited

    private void buttonAgregarPracticaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonAgregarPracticaMouseEntered
        buttonAgregarPractica.setBackground(new java.awt.Color(0, 153, 51));
        labelAp.setForeground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_buttonAgregarPracticaMouseEntered

    private void buttonVaciarTablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonVaciarTablaMouseClicked
        if (!solicitudEmpleado) {
            if (tablaAgregarAPractica.getRowCount()!=0) {
                vaciarTabla(tablaAgregarAPractica, modeloTablaAgregarAPractica);
            }
            else
                JOptionPane.showMessageDialog(null,"La tabla esta vacia");
        }
        else
            JOptionPane.showMessageDialog(this, "                              No puedes eliminar alumnos de esta practica. \nTodos los alumnos del grupo: "+boxGrupos.getSelectedItem()+" deben asistir a esta practica ya que es su hora de clases");
        
    }//GEN-LAST:event_buttonVaciarTablaMouseClicked

    private void buttonVaciarTablaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonVaciarTablaMouseExited
        buttonVaciarTabla.setBackground(new java.awt.Color(255,255,255));
        lableVt.setForeground(new java.awt.Color(204, 51, 0));
    }//GEN-LAST:event_buttonVaciarTablaMouseExited

    private void buttonVaciarTablaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonVaciarTablaMouseEntered
        buttonVaciarTabla.setBackground(new java.awt.Color(204, 51, 0));
        lableVt.setForeground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_buttonVaciarTablaMouseEntered

    private void buttonAgregarTodosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonAgregarTodosMouseClicked
        if (tabla.getRowCount()!=0)
            agregarTodos();
        else
            JOptionPane.showMessageDialog(null,"La tabla esta vacia");
    }//GEN-LAST:event_buttonAgregarTodosMouseClicked

    private void buttonAgregarTodosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonAgregarTodosMouseExited
        buttonAgregarTodos.setBackground(new java.awt.Color(255,255,255));
        labelAgt.setForeground(new java.awt.Color(0, 153, 51));
    }//GEN-LAST:event_buttonAgregarTodosMouseExited

    private void buttonAgregarTodosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonAgregarTodosMouseEntered
        buttonAgregarTodos.setBackground(new java.awt.Color(0, 153, 51));
        labelAgt.setForeground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_buttonAgregarTodosMouseEntered

    private void boxGruposItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_boxGruposItemStateChanged
        llenarTabla();
    }//GEN-LAST:event_boxGruposItemStateChanged

    private void boxHoraSustituidaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_boxHoraSustituidaItemStateChanged
        if (boxHoraSustituida.getSelectedItem().equals("Hora de Clases") ){
            if (!solicitudEmpleado) {
                solicitudEmpleado=true;
                if (tabla.getRowCount()==0) {
                    JOptionPane.showMessageDialog(null,"No tienes ningun registro en el sistema");
                }
                else{
                    boxNombreProfesor.setEnabled(true);
                    agregarTodos();
                }
            }
        }
        else{
            vaciarTabla(tablaAgregarAPractica, modeloTablaAgregarAPractica);
            solicitudEmpleado=false;
            boxNombreProfesor.setEnabled(false);
        }
    }//GEN-LAST:event_boxHoraSustituidaItemStateChanged
    
    public void llenarTabla(){
        vaciarTabla(tabla,modelo);
        try {
            ResultSet resultado=Splash.conexionBaseDatos.consulta("select Alumno.Matricula,nombre,ApellidoP,ApellidoM,grupo from Alumno,Inscrito where Alumno.Matricula = Inscrito.Matricula and grupo="+boxGrupos.getSelectedItem() +" order by ApellidoP;");
            while(resultado.next()){
                modelo.addRow(new Object[] {resultado.getString(1),resultado.getString(2),resultado.getString(3),resultado.getString(4),resultado.getString(5)});//agregamos los datos a la tabla
                tabla.changeSelection(0, 1, false, false);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"No tienes ningun registro en el sistema");
        }
    }
    
    public boolean AgregarTablaAgregarPractica(String datoBusqueda){
        for (int i = tablaAgregarAPractica.getRowCount()-1;i>=0 ; i--){
            if (datoBusqueda.equalsIgnoreCase((String) modeloTablaAgregarAPractica.getValueAt(i,0))) {
                return false;
            }
        }
        return true;
    }
    
    public void agregarTodos(){
        
        if (tabla.getRowCount()==0) 
            JOptionPane.showMessageDialog(null,"No tienes ningun registro en el sistema");
        else{
            if (solicitudEmpleado) {
                vaciarTabla(tablaAgregarAPractica, modeloTablaAgregarAPractica);
            }
            for (int i = tabla.getRowCount()-1;i>=0 ; i--){
                if(AgregarTablaAgregarPractica((String)modelo.getValueAt(tabla.getSelectedRow(),0))){
                    modeloTablaAgregarAPractica.addRow(new Object[] {(String)modelo.getValueAt(i,0),(String)modelo.getValueAt(i,1),(String)modelo.getValueAt(i,2),(String)modelo.getValueAt(i,3),(String)modelo.getValueAt(i,4)});//agregamos los datos a la tabla
                    modeloTablaAgregarAPractica.moveRow(modeloTablaAgregarAPractica.getRowCount() - 1, modeloTablaAgregarAPractica.getRowCount() - 1, 0);//Movemos la fila agregada a la primera posicion
                    tablaAgregarAPractica.changeSelection(0, 1, false, false);
                } 
            }
            JOptionPane.showMessageDialog(null, "¬°¬°Se agregaron todos los alumnos con exito a la Tabla \"alumnos qu√© participarar√°n en la practica\"!!");
        }
    }
    
    public void buscarAlumnoEnTabla(String dato_A_Buscar){
        vaciarTabla(tabla,modelo);
        try {
            ResultSet resultado=Splash.conexionBaseDatos.consulta("select Alumno.Matricula,nombre,ApellidoP,ApellidoM,grupo from Alumno,Inscrito where Alumno.Matricula = Inscrito.Matricula and grupo="+boxGrupos.getSelectedItem()+" and (Alumno.nombre LIKE '%"+ dato_A_Buscar +"%' or Alumno.Matricula LIKE '%"+ dato_A_Buscar +"%') order by ApellidoP;");
            while(resultado.next()){
                modelo.addRow(new Object[] {resultado.getString(1),resultado.getString(2),resultado.getString(3),resultado.getString(4),resultado.getString(5)});//agregamos los datos a la tabla
                tabla.changeSelection(0, 1, false, false);
            }
        } catch (Exception e) {
            System.out.println("Error llenar tabla");
        }
    }
    
    public void vaciarTabla(javax.swing.JTable table,DefaultTableModel model){
        if (table.getRowCount()>0) {
            for (int i = table.getRowCount()-1;i>=0 ; i--)
                model.removeRow(i);
        }
    }
    
    public void llenarBoxGrupos(){
        boxGrupos.removeAllItems();
        try {
            ResultSet resultado= Splash.conexionBaseDatos.consulta("select Grupo from Inscrito group by grupo order by grupo;");
            while(resultado.next()){
                boxGrupos.addItem(resultado.getString(1));
            }
        } catch (Exception e) {
            System.out.println("Error");
        }
    }
    
    public void llenarBoxPracticas(){
        boxPracticasDisponibles.removeAllItems();
        boxPracticasDisponibles.addItem("Ninguna");
        idPractica=new String[100];
        int index=0;
        try {
            ResultSet resultado= Splash.conexionBaseDatos.consulta("select id_Practicas,Nombre_Practica from Practicas order by Nombre_Practica;");
            while(resultado.next()){
                boxPracticasDisponibles.addItem(resultado.getString(2));
                idPractica[index]=resultado.getString(1);
                index++;
            }
        } catch (Exception e) {
            System.out.println("Error");
        }
    }
    
    public void llenarBoxNombreProfesor(){
        boxNombreProfesor.removeAllItems();
        boxNombreProfesor.addItem("Ninguno");
        NumeroDeTrabajador=new String[500];
        int index=0;
        try {
            ResultSet resultado= Splash.conexionBaseDatos.consulta("select * from Empleado order by ApellidoP;");
            while(resultado.next()){
                boxNombreProfesor.addItem(resultado.getString(2)+" "+resultado.getString(3)+" "+resultado.getString(4));
                NumeroDeTrabajador[index]=resultado.getString(1);
                index++;
            }
        } catch (Exception e) {
            System.out.println("Error");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxAge;
    private javax.swing.JComboBox<String> boxDia;
    private javax.swing.JComboBox<String> boxGrupos;
    private javax.swing.JComboBox<String> boxHoraEntrada;
    private javax.swing.JComboBox<String> boxHoraSalida;
    private javax.swing.JComboBox<String> boxHoraSustituida;
    private javax.swing.JComboBox<String> boxMes;
    private javax.swing.JComboBox<String> boxNombreProfesor;
    private javax.swing.JComboBox<String> boxPracticasDisponibles;
    private javax.swing.JPanel buttonAgregarAlumno;
    private javax.swing.JPanel buttonAgregarPractica;
    private javax.swing.JPanel buttonAgregarTodos;
    private javax.swing.JPanel buttonEliminarAlumno;
    private javax.swing.JPanel buttonVaciarTabla;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel labelAgt;
    private javax.swing.JLabel labelAp;
    private javax.swing.JLabel labelE;
    private javax.swing.JLabel labelEd;
    private javax.swing.JLabel labelTitulo;
    private javax.swing.JLabel lableVt;
    private javax.swing.JTable tabla;
    private javax.swing.JTable tablaAgregarAPractica;
    private javax.swing.JTextField txtBusqueda;
    // End of variables declaration//GEN-END:variables
}

